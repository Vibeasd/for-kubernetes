apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: elastic
  namespace: kube-system
spec:
  chart:
    spec:
      chart: elastic
      sourceRef:
        kind: HelmRepository
        name: elasticsearch
      version: '>=7.15.0'
  values:
    clusterName: "elasticsearch"
    nodeGroup: "master"

    masterService: ""

    roles:
      master: "true"
      ingest: "true"
      data: "true"
      remote_cluster_client: "true"
      ml: "true"

    replicas: 3
    minimumMasterNodes: 2

    esMajorVersion: ""

    esConfig: {}

    extraEnvs: []



    envFrom: []

    secretMounts: []

    hostAliases: []
    #- ip: "127.0.0.1"
    #  hostnames:
    #  - "foo.local"
    #  - "bar.local"

    image: "docker.elastic.co/elasticsearch/elasticsearch"
    imageTag: "7.15.0"
    imagePullPolicy: "IfNotPresent"

    podAnnotations:
      {}

    labels: {}

    esJavaOpts: "" # example: "-Xmx1g -Xms1g"

    resources:
      requests:
        cpu: "1000m"
        memory: "2Gi"
      limits:
        cpu: "1000m"
        memory: "2Gi"

    initResources:
      {}


    networkHost: "0.0.0.0"

    volumeClaimTemplate:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 30Gi

    rbac:
      create: false
      serviceAccountAnnotations: {}
      serviceAccountName: ""
      automountToken: true

    podSecurityPolicy:
      create: false
      name: ""
      spec:
        privileged: true
        fsGroup:
          rule: RunAsAny
        runAsUser:
          rule: RunAsAny
        seLinux:
          rule: RunAsAny
        supplementalGroups:
          rule: RunAsAny
        volumes:
          - secret
          - configMap
          - persistentVolumeClaim
          - emptyDir

    persistence:
      enabled: true
      labels:
        # Add default labels for the volumeClaimTemplate of the StatefulSet
        enabled: false
      annotations: {}

    extraVolumes:
      []

    extraVolumeMounts:
      []

    extraContainers:
      []

    extraInitContainers:
      []

    priorityClassName: ""

    antiAffinityTopologyKey: "kubernetes.io/hostname"

    antiAffinity: "hard"

    nodeAffinity: {}

    podManagementPolicy: "Parallel"

    enableServiceLinks: true

    protocol: http
    httpPort: 9200
    transportPort: 9300

    service:
      enabled: true
      labels: {}
      labelsHeadless: {}
      type: ClusterIP
      nodePort: ""
      annotations: {}
      httpPortName: http
      transportPortName: transport
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      externalTrafficPolicy: ""

    updateStrategy: RollingUpdate

    maxUnavailable: 1

    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000

    securityContext:
      capabilities:
        drop:
          - ALL

      runAsNonRoot: true
      runAsUser: 1000


    terminationGracePeriod: 120

    sysctlVmMaxMapCount: 262144

    readinessProbe:
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 3
      timeoutSeconds: 5

    clusterHealthCheckParams: "wait_for_status=green&timeout=1s"

    schedulerName: ""

    imagePullSecrets: []
    nodeSelector: {}
    tolerations: []

    ingress:
      enabled: false
      annotations:
        {}

      hosts:
        - host: chart-example.local
          paths:
            - path: /
      tls: []

    nameOverride: ""
    fullnameOverride: ""
    healthNameOverride: ""

    lifecycle:
      {}
     
    sysctlInitContainer:
      enabled: true

    keystore: []

    networkPolicy:

      http:
        enabled: false

      transport:
        ## Note that all Elasticsearch Pods can talk to themselves using transport port even if enabled.
        enabled: false

    tests:
      enabled: true

    fsGroup: ""